y <- prepTime(all_tabs) %>%
mutate(money = billable_time / 60 * UNITPRICE) %>%
left_join(all_tabs$project %>% select(cf_applicable_ordinance_2, PK_Project),
by = c("top_project" = "PK_Project")) %>%
mutate(ordnance = str_replace(cf_applicable_ordinance_2, "If ", ""),
ordnance = str_replace(ordnance, "/.{1,}$", "")) %>%
group_by(ctu_projectName, projnum, ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
) %>%
mutate(across(ends_with("time"), ~ .x / 60)) %>%
filter(year > 2019) %>%
left_join(projectSize(all_tabs))
View(y)
projectSize(all_tabs)
z <- y %>%
group_by(ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
n = length)
z <- y %>%
group_by(ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
n = nrow)
z <- y %>%
group_by(ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
n = nrow(.data))
View(z)
table(z$year)
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25))
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = billable_time)) +
geom_bar(stacked = TRUE)
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = billable_time)) +
geom_bar(stacked = TRUE, stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = billable_time, col = ctu_division)) +
geom_bar(stacked = TRUE, stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = billable_time, fill = ctu_division)) +
geom_bar(stacked = TRUE, stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = money, fill = ctu_division)) +
geom_bar(stacked = TRUE, stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = money, fill = ctu_division)) +
geom_bar(stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = money, fill = ctu_division)) +
geom_col(stat = "identity")
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = money, fill = ctu_division)) +
geom_col()
z %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25)) %>%
ggplot(aes(x = quarter, y = money, fill = ctu_division, col = ordnance)) +
geom_col()
View(z)
z <- y %>%
group_by(ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
n = nrow(.data))%>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25))
View(z)
View(y)
y <- prepTime(all_tabs) %>%
mutate(money = billable_time / 60 * UNITPRICE) %>%
left_join(all_tabs$project %>% select(cf_applicable_ordinance_2, PK_Project),
by = c("top_project" = "PK_Project")) %>%
mutate(ordnance = str_replace(cf_applicable_ordinance_2, "If ", ""),
ordnance = str_replace(ordnance, "/.{1,}$", "")) %>%
group_by(ctu_projectName, projnum, ctu_division, projecttype, year, q_in_year, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
) %>%
mutate(across(ends_with("time"), ~ .x / 60)) %>%
filter(year > 2019) %>%
left_join(projectSize(all_tabs)) %>%
mutate(quarter = year + ((1/4 * q_in_year) - 0.25))
View(y)
z <- y %>%
group_by(ctu_division, projecttype, year, q_in_year, quarter, billable, ordnance) %>%
summarize(across(c(billable_time, nonbillable_time, money), sum, na.rm = TRUE),
n = nrow(.data))
z  %>%
devtools::load_all()
rc_api_token <- "D2F71E35ACDAA83025D9EEA0F16D8BDF"
library(tidyverse)
# REDCap data
req <- httr2::request("https://redcap.ctu.unibe.ch/api/") %>%
httr2::req_headers() %>%
httr2::req_body_form(list(token = rc_api_token,
content = "record",
format = "csv",
type = "flat"))
req %>% httr2::req_dry_run()
resp <- req %>% httr2::req_perform()
dat <- read.csv(textConnection(resp %>% resp_body_string()))
req <- httr2::request("https://redcap.ctu.unibe.ch/api/") %>%
httr2::req_headers() %>%
httr2::req_body_form(list(token = rc_api_token,
content = "metadata",
format = "csv"))
resp <- req %>% httr2::req_perform()
?str_c
library(pf)
# load the data from R
all_tabs <- getPFData()
dat <- prepTime(all_tabs)
dplyr::filter(tokeep) %>%
dplyr::mutate(div = stringr::word(finart_Name, end = 2),
div = stringr::str_to_sentence(div)) %>%
dplyr::group_by(ctu_projectName, div) %>%
dplyr::summarize(billable_time = sum(billable_time),
nonbillable_time = sum(nonbillable_time)) |> View()
library(tidyverse)
dat %>%
dplyr::mutate(tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist")) %>%
dplyr::select(ctu_projectName, starts_with("finart"), starts_with("ProjectName"), tokeep) |> View()
dat %>%
dplyr::mutate(tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist")) %>%
dplyr::select(ctu_projectName, starts_with("finart"), starts_with("ProjectName"), tokeep) %>%
dplyr::filter(tokeep) %>%
dplyr::mutate(div = stringr::word(finart_Name, end = 2),
div = stringr::str_to_sentence(div)) %>%
dplyr::group_by(ctu_projectName, div) %>%
dplyr::summarize(billable_time = sum(billable_time),
nonbillable_time = sum(nonbillable_time)) |> View()
dat %>%
dplyr::mutate(tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist")) %>%
dplyr::select(ctu_projectName, starts_with("finart"), starts_with("ProjectName"), tokeep) %>%
dplyr::filter(tokeep) %>%
dplyr::mutate(div = stringr::word(finart_Name, end = 2),
div = stringr::str_to_sentence(div)) %>%
dplyr::group_by(ctu_projectName, div) %>%
dplyr::summarize(billable_time = sum(billable_time),
nonbillable_time = sum(nonbillable_time))
dat %>%
dplyr::mutate(tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist")) %>%
# dplyr::select(ctu_projectName, starts_with("finart"), starts_with("ProjectName"), tokeep) |> View()
dplyr::filter(tokeep) %>%
dplyr::mutate(div = stringr::word(finart_Name, end = 2),
div = stringr::str_to_sentence(div)) %>%
dplyr::group_by(ctu_projectName, div) %>%
dplyr::summarize(billable_time = sum(billable_time),
nonbillable_time = sum(nonbillable_time)) |> View()
dat %>%
dplyr::mutate(tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist")) %>%
devtools::load_all()
?prepTime
devtools::document()
?projects_ctu_report
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::load_all()
devtools
devtools::document
devtools::document()
devtools::install()
devtools::document()
devtools::install()
remotes::install_github(""CTU-Bern/pf"")
remotes::install_github("CTU-Bern/pf")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(pf)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(pf)
gc()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(pf)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(pf)
# load the data from R
all_tabs <- getPFData()
# download data via ODBC
all_tabs <- getPFData(NULL)
# download data via ODBC
all_tabs <- tryCatch(getPFData(NULL))
?tryCatch
# load the data from R
all_tabs <- getPFData()
# download data via ODBC
# all_tabs <- getPFData(NULL)
all_tabs$customer <- decodeCustomFields(all_tabs$customer, all_tabs$customfields)
all_tabs$project <- decodeCustomFields(all_tabs$project, all_tabs$customfields)
all_tabs$ticket <- decodeCustomFields(all_tabs$ticket, all_tabs$customfields)
all_tabs$worker <- decodeCustomFields(all_tabs$worker, all_tabs$customfields)
# save the data to R
savePFdata(all_tabs)
# load the data from R
all_tabs2 <- getPFData()
dat <- prepTime(all_tabs)
library(tidyverse)
d <- dat %>%
dplyr::mutate(
tokeep = stringr::str_detect(.$finart_Name, "Database [Ss]et-up|Data [Aa]nalysis|Statist") |
stringr::str_detect(.$finart_Name1, "Stat")) %>%
dplyr::select(ctu_projectName, starts_with("finart"), starts_with("ProjectName"), tokeep) |> View()
dplyr::filter(tokeep) %>%
dplyr::mutate(div = stringr::word(finart_Name, end = 2),
div = stringr::str_to_sentence(div),
div = case_when(div == "Regular reports" ~ "Data analysis",
div == "Study planning" ~ "Data analysis",
TRUE ~ div)) %>%
dplyr::group_by(ctu_projectName, div) %>%
dplyr::summarize(billable_time = sum(billable_time),
nonbillable_time = sum(nonbillable_time)) %>%
dplyr::mutate(billable_time = billable_time/60,
nonbillable_time = nonbillable_time/60)
